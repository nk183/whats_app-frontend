{"ast":null,"code":"import _objectSpread from \"/run/media/nk/NK/A_naman/Workspace/whats_app_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/run/media/nk/NK/A_naman/Workspace/whats_app_clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/run/media/nk/NK/A_naman/Workspace/whats_app_clone/src/components/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styling/Chat.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { SearchOutlined } from '@material-ui/icons';\nimport SidebarChat from './SidebarChat';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport axios from 'axios';\n\nfunction Chat(_ref) {\n  var _this = this;\n\n  var roomID = _ref.roomID,\n      userId = _ref.userId;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState(Math.floor(Math.random() * 5000)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      seed = _useState4[0],\n      setseed = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chat = _useState6[0],\n      setchat = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      roomChats = _useState8[0],\n      setRoomChats = _useState8[1]; // const [roomId, setRooId] = useState(\"2\");\n\n\n  var _useState9 = useState(\"not\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isAdd = _useState10[0],\n      setIsAdd = _useState10[1]; // setseed(Math.floor(Math.random()*5000));\n\n\n  useEffect(function () {\n    axios.get(\"http://localhost:8080/getChat/\".concat(roomID)).then(function (response) {\n      console.log(response.data);\n      setRoomChats(response.data);\n      setIsAdd(\"not\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [isAdd, roomID]);\n\n  var sendchat = function sendchat(e) {\n    e.preventDefault(); // alert(input);\n    // alert();\n    // alert(\"room\"+roomID)\n\n    console.log(input); // var userId=\"1\"\n\n    setchat(_objectSpread({}, chat, {\n      \"message\": input,\n      \"userId\": userId,\n      \"roomId\": roomID\n    }));\n    console.log(chat);\n    axios.post(\"http://localhost:8080/addChat\", chat).then(function (response) {\n      // alert(response.data);\n      setIsAdd(response.data);\n    }).catch(function (error) {\n      alert(error);\n      console.log(error);\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"https://avatars.dicebear.com/api/human/\".concat(seed, \".svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_header_info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"name \", roomID), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Last seem at ...\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_headerRight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SearchOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }\n  }, roomChats.length != 0 ? roomChats.map(function (temp) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"chat_message \".concat(userId == temp.userId && 'chat_reciever'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"spam\", {\n      className: \"chat_name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, temp.userId), temp.message, /*#__PURE__*/React.createElement(\"spam\", {\n      className: \"chat_timestamp\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, temp.timeStamp));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"start messaging\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat_footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(InsertEmoticonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: input,\n    placeholder: \"type chat ...\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setInput(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendchat,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Send\")), /*#__PURE__*/React.createElement(MicIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/run/media/nk/NK/A_naman/Workspace/whats_app_clone/src/components/Chat.js"],"names":["React","useState","useEffect","useParams","Avatar","IconButton","DonutLargeIcon","ChatIcon","MoreVertIcon","SearchOutlined","SidebarChat","InsertEmoticonIcon","MicIcon","axios","Chat","roomID","userId","input","setInput","Math","floor","random","seed","setseed","chat","setchat","roomChats","setRoomChats","isAdd","setIsAdd","get","then","response","console","log","data","catch","error","sendchat","e","preventDefault","post","alert","length","map","temp","message","timeStamp","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport '../styling/Chat.css';\r\nimport {Avatar,IconButton } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport {SearchOutlined} from '@material-ui/icons'\r\nimport SidebarChat from './SidebarChat'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport axios from'axios'\r\n\r\n\r\n\r\nfunction Chat({roomID,userId}) {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setseed] = useState(Math.floor(Math.random()*5000))\r\n    const [chat, setchat] = useState({})\r\n    const [roomChats, setRoomChats] = useState([])\r\n    // const [roomId, setRooId] = useState(\"2\");\r\n    const [isAdd, setIsAdd] = useState(\"not\")\r\n    // setseed(Math.floor(Math.random()*5000));\r\n    useEffect(() => {\r\n        \r\n        axios.get(`http://localhost:8080/getChat/${roomID}`)\r\n                .then(response=>{\r\n                    console.log(response.data);\r\n                    setRoomChats(response.data)\r\n                    setIsAdd(\"not\")\r\n                })\r\n                .catch(error=>{\r\n                    console.log(error);\r\n                }\r\n                )\r\n\r\n    }, [isAdd,roomID]) \r\n\r\n    const sendchat=(e)=>{\r\n        e.preventDefault();\r\n        // alert(input);\r\n        // alert();\r\n        // alert(\"room\"+roomID)\r\n        console.log(input);\r\n        // var userId=\"1\"\r\n        setchat({...chat,\"message\":input,\"userId\":userId,\"roomId\":roomID})\r\n        console.log(chat);\r\n        axios.post(\"http://localhost:8080/addChat\",chat)\r\n            .then(response=>{\r\n                // alert(response.data);\r\n                setIsAdd(response.data)\r\n            })\r\n            .catch(error=>{\r\n                alert(error)\r\n                console.log(error);\r\n                }\r\n            )\r\n\r\n        setInput('');\r\n    }\r\n    \r\n    return (\r\n        <div className='chat'>\r\n           <div className='chat_header'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className='chat_header_info'>\r\n                    <h3>name {roomID}</h3>\r\n                    <p>Last seem at ...</p>\r\n                </div>\r\n                <div className='chat_headerRight'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n\r\n           </div>\r\n           <div className='chat_body'>\r\n           {(roomChats.length!=0)?(roomChats.map((temp)=>(\r\n           \r\n                <p className={`chat_message ${userId==temp.userId && 'chat_reciever'}`}>\r\n                    <spam className='chat_name'>\r\n                        {temp.userId}\r\n                    </spam>\r\n                    {temp.message}\r\n                    <spam className='chat_timestamp'>\r\n                        {temp.timeStamp}\r\n                    </spam>\r\n                </p>\r\n            )\r\n            )):\r\n            <p>start messaging</p>\r\n           }\r\n           </div>     \r\n\r\n            {/* <div className='chat_body'>\r\n                <p className={`chat_chat ${true && 'chat_reciever'}`}>\r\n                    <spam className='chat_name'>\r\n                        moooom\r\n                    </spam>\r\n                        lololo\r\n                    <spam className='chat_timestamp'>\r\n                        hi nmn\r\n                    </spam>\r\n                </p>\r\n            </div> */}\r\n           \r\n           <div className='chat_footer'>\r\n                \r\n                <InsertEmoticonIcon></InsertEmoticonIcon>\r\n                <form>\r\n                    <input value={input} placeholder=\"type chat ...\" type=\"text\" onChange={e=>setInput(e.target.value)}/>\r\n                    <button onClick={sendchat} type='submit'>Send</button>\r\n\r\n                </form>\r\n                <MicIcon/>\r\n           </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}